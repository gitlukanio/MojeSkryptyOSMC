####################### Z prezentacji na 8 sesji linuxowej ###################################
# Paczka iproute2


# Wypisanie interfejsow
ip link list
ip link show eth0

#wlaczenie i wylaaczenie interfejsow
ip link set eth0 up
ip link set eth0 down

#ustawianie adresu Mac
ip link set eth0 address 00:00:00:00:00:00

#zmiana nazwy interfejsow
ip link set eth0 name lan
ip link set wlan0 name wan


#wypisanie adresow interfejsow
ip address list
ip address show lan

#dodanie adresu
ip address add 10.0.0.1/24 dev lan

#usuniecie adresu
ip address del 10.0.0.1/24 dev lan

#usuniecie wszystkich adresow
ip address flush lan

#wypisanie tras
ip route list
ip route show 0/0

#dodanie trasy
ip route add to 10.0.0.0/24 dev lan
ip route add default via 10.0.0.1

#usuniecie trasy
ip route delete 0/0

#zapisywanie/odtworzenie trasy
ip route save > backup
ip route restore < backup

# forwarding IP

echo 1 > /proc/sy/net/ipv4/ip_forward

# IPTABLES ###########################################

# dodawanie zasad
iptables [-t table] -A CHAIN specyfikacja-zasady
iptables [-t table] -I CHAIN [pozycja] specyfikacja-zasady

# Dodawanie defaultowych zasad
iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP



# usuwanie zasad
iptables [-t table] -D CHAIN specyfikacja-zasady
iptables [-t table] -D pozycja

# listowanie zasad
iptables [-t table] -vL [CHAIN]

# specyfikacja zasady
kryteria -j TARGET opcje-targetu


# Targety
# ACCEPT - przepuszcza target
# DROP - Nie przepuszcza i nic z nim nie robi
# REJECT - Nie przepuszcza i wysy≈Ça b≈ÇƒÖd

# Kryteria
# -i ethN - pakiet przychodzi z interfejsu ethN
# -o ethN - pakiet wychodzi z interfejsu ethN
# -s 1.2.3.4 - pakiet przychodzi z adresu 1.2.3.4
# -d 1.2.3.4 - pakiet wychodzi do adresu 1.2.3.4
# -p tcp protok√≥l tcp (moze byc tez icmp, udp itd)
# -sport 23 - pakiet przychodzi z portu 23
# -dport 23 - pakiet wychodzi na port 23 

# Iptables pozwala sledzic polaczenia i zmiejszac ilosc sprawdzanych regolek
# dla ustanowionych polacze. Robi to modu≈Ç conntrack

iptables -A INPUT -m conntrack --ctstate STAN -j TARGET

# Mozliwe stany pakietu
# NEW - pakiet ustanawia nowe polaczenie
# ESTABLISHED - pakiet nalezy do ustanowionego polaczenia
# RELATED - pakiet jest powiazany z ustanowionym polaczeniem
# INVALID - pakiet nie nalezy do zadnego znanego polaczenia

# przyklad
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT


# szukanie stringu w pakiecie
# Og√≥lnie -m string --algo bm [--icase] [--from n] [--to n] --[hex]string "string do wyszukania"

# Przyklady
iptables -A INPUT -j DROP -m string --algo bm -p tcp --dport 80 ...
	--icase --string "x-requested-with"
	--icase --string "content-type: image/"
	--icase --string "content-type: application/x-shockwave-flash"


# Ustawianie TTL czyli jak utrudnic userom stawianie/podlaczanie routerow
iptables -t mangle - A FORWARD -o lan -j TTL --ttl-set 1

# omijanie poprzedniej blokady :-)
iptables -t mangle -A FORWARD -o lan -j TTL --ttl-int 1		# ttl-int incrementuje 

# Piec obrazkow na minute
iptables -A FORWARD -i lan -p tcp --dport 80 	\
-m conntrack --ctstate NEW			\
-m string --algo bm --icase			\
	  --string "Content-Type: image/"	\
-m recent --set

iptables -A FORWARD -i lan -j DROP -p tcp --dport 80	\
-m conntrack --ctstate NEW				\
-m string --algo bm --icase				\
	  --string "Content-Type: image/"		\
-m resent --update --seconds 60 --hitcount 6

# maskarada
iptables -t nat -A POSTROUTING -o wan -j MASQUERADE

# NAT bez MASQUERADE
iptables -t nat -A POSTROUTING -o wan -j SNAT --to-source 10.0.0.5

# Przekierowanie portow np z 10.0.0.5:8080 na 192.168.1.23:80
iptables -t nat -A PREROUTING -p tcp --dport 8080 --to 10.0.0.5 -j DNAT --to-destination 192.168.1.23:80

# Serwer DHCP - dnsmasq
# konfiguracja - /etc/dnsmasq.conf
dhcp-range=192.168.1.100,192.168.1.105  # przydzielanie 6 adresow od 100 do 105

# skladnia
dhcp-range=[<interface>,]<start-addr>,<end-addr>[,<netmask>[,<broadcast>]][,<lease-time>

# Dzialanie tylko na jednym interfejsie
interface=lan
bind-interfaces

# statyczne dzierzawy w innej podsieci
dhcp-range=192.168.2.1,static				# adres naszego routera
dhcp-host=d3:4d:b3:3f:23:42,192.168.2.2,infinite
dhcp-host=hostname,192.168.2.3,infinite


# skoro mamy juz postawiony serwer dhcp to mozemy dalej kontynlowac konfiguracje udostepnienia polaczenia 

# najpierw adresy ip
ip address add 192.168.1.1/24 dev lan	# siec dla dhcp zmiennego
ip address add 192.168.2.1/24 dev lan	# siec dla stalych adresow ip

# a nastepnie sam interface
ip link set lan up

# Mostki czyli ≈polaczenie interfejsow tak aby zachowywaly sie jak jeden
brctl addbr br0
brctl addif br0 lan
brctl addif br0 tap0

ip address flush lan
ip link set lan proisc on
ip link set tap0 promisc on

ip address add 192.168.1.1/24 dev br0
ip address add 192.168.2.1/24 dev br0


# pelny skrypt pozwalajacy udostepnic polaczenie wifi na eht0

ip address set lan 192.168.1.1/24
ip link set lan up
iptables - t nat - A POSTROUTING -o wan -j MASQUERADE
echo 1 > /proc/sys/net/ipv4/ip_forward
echo "dhcp-range=192.168.1.100,192.168.1.200" >> /etc/dnsmasq.conf
service dnsmasq start

# koniec 

#============ TIPS and TRICKS and good practices ====================

# set default policy of DROP
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT DROP [0:0]

# Accept any related or established connections
-I INPUT 1 -m state --state RELATED,ESTABLISHED -j ACCEPT
-I OUTPUT 1 -m state --state RELATED,ESTABLISHED -j ACCEPT

# Allow all traffic on the loopback interface
-A INPUT -i lo -j ACCEPT
-A OUTPUT -o lo -j ACCEPT

# Allow outbound DHCP request
-A OUTPUT -o eth0 -p udp --dport 67:68 --sport 67:68 -j ACCEPT

# Allow inbound SSH
-A INPUT -i eth0 -p tcp -m tcp --dport 22 -m state --state NEW -j ACCEPT

# Allow outbound email
-A INPUT -i eth0 -p tcp -m tcp --dport 25 -m state --state NEW -j ACCEPT

# Outbound DNS lookups
-A OUTPUT -o eth0 -p udp -m udp --dport 53 -j ACCEPT

# Outbound PING requests
-A OUTPUT -o eth0 -p icmp -j ACCEPT

# Outbound Network Time Protocol (NTP) request
-A OUTPUT -o eth0 -p udp --dport 123 --sport 123 -j ACCEPT

# Outbound HTTP
-A OUTPUT -o eth0 -p tcp -m tcp --dport 80 -m state --state NEW -j ACCEPT
-A OUTPUT -o eth0 -p tcp -m tcp --dport 443 -m state --state NEW -j ACCEPT

# ############################################################################


# How to block access to facebook - 31.13.64.0/18

host -t a www.facebook.com
whois 31.13.65.17 | grep inetnum    # daje wynik inetnum  31.13.64.0 - 31.13.127.255 
# Majac zakres adresow ip jakie posiada facebook mozna dodac regole blokujaca wszystkie z nich
-A OUTPUT -p tcp -i eth0 -o eth1 -d 31.13.64.0/18 -j DROP

# Odblokowany dostep do facebooka pomiedzy 12:00 a 13:00
-A OUTPUT -p tcp -m multiport -dport http,https -i eth0 -o eth1 \
-m time --timestart 12:00 --timestop 13:00 			\
-d 31.13.64.0/18 -j ACCEPT

# drop all TCP/UDP traffic during service hours between 02:00 and 03:00
-A INPUT -p tcp -m time --timestart 02:00 --timestop 03:00 -j DROP
-A INPUT -p udp -m time --timestart 02:00 --timestop 03:00 -j DROP

# Scenario: You suspect a bad actor is attempting to DoS your webserver
# You can restrict the number of connections a single address can have to your webserver
-A INPUT -p tcp -syn -m multiport --dport 80,443 -m connlimit --connlimit-above 20 \
-j REJECT --reject-with-tcp-reset

# Tip2 You can drop incoming connections \
# if IP address makes more than 10 connections to port 80/443 in 100 seconds

-A INPUT -p tcp -m multiport --dport 80,443 -m state d-state NEW -m recent --set
-A INPUT -p tcp -m multiport --dport 80,443 -m state --state NEW -m recent --update --seconds 100 -hitcount 10 -j DROP

# You would like to monitor whats going on with iptables in real time, sort of like with top
watch --interval=5 `iptables -nvL | grep -v "0     0"`
# note that the spacing on greep command is important "5 spaces between 0"



